// CSS Lock Implementation

@mixin css-lock ($minf, $maxf, $minw: 600, $maxw: 1800, $property: padding, $unit: px) {
  #{$property}: calc(#{$minf}#{$unit} + (#{$maxf} - #{$minf}) * ((100vw - #{$minw}#{$unit}) / (#{$maxw} - #{$minw}))) !important;

  @media (max-width: #{$minw}#{$unit}) {
    #{$property}: #{$minf}#{$unit} !important;
  }
  @media (min-width: #{$maxw}#{$unit}) {
    #{$property}: #{$maxf}#{$unit} !important;
  }
}

// Center elements. Define vertical, horizontal, or both position
@mixin center($position) {
  position: absolute;

  @if $position == 'vertical' {
    top: 50%;
    transform: translateY(-50%);
  }
  @else if $position == 'horizontal' {
    left: 50%;
    transform: translate(-50%);
  }
  @else if $position == 'both' {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
}

/* Custom Styles */

.masthead {
  min-height: 80vh;
  border-radius: 0 !important;
}

.custom-background-image {
  background-color: #fcfcfc;
  background-image: url(../assets/image01.jpg) !important;
  background-size: cover !important;
  background-position: center !important;
  background-repeat: no-repeat !important;
}

.custom-text-position {
  @include center(both);
  margin: 0 auto;
}

.custom-text-padding {
  // ensure a padding between 1em/16px and 6em/96px
  @include css-lock(16, 96, 600, 1800, padding, px);
}

.custom-grid-spacing {
  padding-top: 3em !important;
}

.gallery {
  padding: 2em 0 4em;
}

.gallery__grid,
.gallery__item,
.social__list,
.social__items {
  list-style: none;
  margin: 0;
  padding: 0;
}

.gallery__grid {
  display: flex;
  flex-wrap: wrap;
  margin: -0.5em;
}

.gallery__grid > * {
  flex: 1 0 15em;
  margin: 0.5em;
}

.gallery__image {
  max-width: 100%;
}

.footer {
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  align-items: center;
}

.social__list {
  display: flex;
  justify-content: center;
  padding-bottom: 1em;
}

.ui.basic.label {
  border: none;
}

.credit {
  font-size: 0.8rem;
  color: #cdcdcd;
}
